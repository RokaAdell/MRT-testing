--> Forking and Pull Requests
creating a personal copy of a repository owned by someone else. 
This is often used when you want to contribute to a project that you do not have write access to. 

*Fork the Repository
*Clone Your Fork Locally
*Make and Commit Changes
*Push Changes to Your Fork
*Create a Pull Request
*Collaborate and Review


--> Collaborators and Teams
repository owners grant collaborator status to specific individuals, and organize contributors into teams. 
This approach simplifies collaboration within a specific repository and is particularly useful for larger projects.

*Adding Collaborators
Enter the GitHub usernames or email addresses of individuals you want to collaborate with.
Collaborators will receive invitations to join as contributors

*Assigning Teams
you can create teams based on roles or responsibilities.
Teams can have different levels of access to repositories.

*Access Control
You can specify read or write access for collaborators and teams.
Collaborators and teams can be given varying levels of control over the repository, such as the ability to push code or administer the repository.

*Collaborate and Contribute
Collaborators and team members can work directly on the repository, making contributions and collaborating seamlessly.
They can create branches, push code, and participate in discussions.